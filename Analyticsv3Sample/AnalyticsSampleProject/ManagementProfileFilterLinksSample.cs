 
// Copyright 2015 DAIMTO :  www.daimto.com
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Build date: 11/30/2015 22:16:59
//     C# generater version: 1.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Google.Apis.Analytics.v3;
using Google.Apis.Analytics.v3.Data;

namespace DAIMTO.Analytics.v3.Sample
{
    class ManagementProfileFilterLinksSample
    {
		/// <summary>
        /// Delete a profile filter link.
		/// Documentation: https://developers.google.com/analytics//v3/profilefilterlinks/delete
		/// </summary>
		/// <param name="service">Valid authentcated AnalyticsService</param>
		/// <param name="accountId">Account ID to which the profile filter link belongs.</param>
		/// <param name="webPropertyId">Web property Id to which the profile filter link belongs.</param>
		/// <param name="profileId">Profile ID to which the filter link belongs.</param>
		/// <param name="linkId">ID of the profile filter link to delete.</param>
		/// <returns>void </returns>
	    public static void Delete(AnalyticsService service, string accountId, string webPropertyId, string profileId, string linkId)
	    {
		    //Note Genrate Argument Exception (https://msdn.microsoft.com/en-us/library/system.argumentexception(loband).aspx)
		    try
            { 			service.Management.ProfileFilterLinks.Delete(accountId, webPropertyId, profileId, linkId).Execute();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Request Failed " + ex.Message);
                throw ex;
            }
		 }
		
	/// <summary>
        /// Returns a single profile filter link.
		/// Documentation: https://developers.google.com/analytics//v3/profilefilterlinks/get
		/// </summary>
		/// <param name="service">Valid authentcated AnalyticsService</param>
		/// <param name="accountId">Account ID to retrieve profile filter link for.</param>
		/// <param name="webPropertyId">Web property Id to retrieve profile filter link for.</param>
		/// <param name="profileId">Profile ID to retrieve filter link for.</param>
		/// <param name="linkId">ID of the profile filter link.</param>
		/// <returns>ProfileFilterLink </returns>
	    public static ProfileFilterLink Get(AnalyticsService service, string accountId, string webPropertyId, string profileId, string linkId)
	    {
		    //Note Genrate Argument Exception (https://msdn.microsoft.com/en-us/library/system.argumentexception(loband).aspx)
		    try
            {  
			return 			service.Management.ProfileFilterLinks.Get(accountId, webPropertyId, profileId, linkId).Execute();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Request Failed " + ex.Message);
                throw ex;
            }
		 }
		
	/// <summary>
        /// Create a new profile filter link.
		/// Documentation: https://developers.google.com/analytics//v3/profilefilterlinks/insert
		/// </summary>
		/// <param name="service">Valid authentcated AnalyticsService</param>
		/// <param name="body">Valid ProfileFilterLink Body</param>
		/// <param name="accountId">Account ID to create profile filter link for.</param>
		/// <param name="webPropertyId">Web property Id to create profile filter link for.</param>
		/// <param name="profileId">Profile ID to create filter link for.</param>
		/// <returns>ProfileFilterLink </returns>
	    public static ProfileFilterLink Insert(AnalyticsService service, ProfileFilterLink body, string accountId, string webPropertyId, string profileId)
	    {
		    //Note Genrate Argument Exception (https://msdn.microsoft.com/en-us/library/system.argumentexception(loband).aspx)
		    try
            {  
			return 			service.Management.ProfileFilterLinks.Insert(body, accountId, webPropertyId, profileId).Execute();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Request Failed " + ex.Message);
                throw ex;
            }
		 }
		
	/// <summary>
        /// Lists all profile filter links for a profile.
		/// Documentation: https://developers.google.com/analytics//v3/profilefilterlinks/list
		/// </summary>
		/// <param name="service">Valid authentcated AnalyticsService</param>
		/// <param name="accountId">Account ID to retrieve profile filter links for.</param>
		/// <param name="webPropertyId">Web property Id for profile filter links for. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.</param>
		/// <param name="profileId">Profile ID to retrieve filter links for. Can either be a specific profile ID or '~all', which refers to all the profiles that user has access to.</param>
		/// <returns>ProfileFilterLinks </returns>
	    public static ProfileFilterLinks List(AnalyticsService service, string accountId, string webPropertyId, string profileId)
	    {
		    //Note Genrate Argument Exception (https://msdn.microsoft.com/en-us/library/system.argumentexception(loband).aspx)
		    try
            {  
			return 			service.Management.ProfileFilterLinks.List(accountId, webPropertyId, profileId).Execute();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Request Failed " + ex.Message);
                throw ex;
            }
		 }
		
	/// <summary>
        /// Update an existing profile filter link. This method supports patch semantics.
		/// Documentation: https://developers.google.com/analytics//v3/profilefilterlinks/patch
		/// </summary>
		/// <param name="service">Valid authentcated AnalyticsService</param>
		/// <param name="body">Valid ProfileFilterLink Body</param>
		/// <param name="accountId">Account ID to which profile filter link belongs.</param>
		/// <param name="webPropertyId">Web property Id to which profile filter link belongs</param>
		/// <param name="profileId">Profile ID to which filter link belongs</param>
		/// <param name="linkId">ID of the profile filter link to be updated.</param>
		/// <returns>ProfileFilterLink </returns>
	    public static ProfileFilterLink Patch(AnalyticsService service, ProfileFilterLink body, string accountId, string webPropertyId, string profileId, string linkId)
	    {
		    //Note Genrate Argument Exception (https://msdn.microsoft.com/en-us/library/system.argumentexception(loband).aspx)
		    try
            {  
			return 			service.Management.ProfileFilterLinks.Patch(body, accountId, webPropertyId, profileId, linkId).Execute();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Request Failed " + ex.Message);
                throw ex;
            }
		 }
		
	/// <summary>
        /// Update an existing profile filter link.
		/// Documentation: https://developers.google.com/analytics//v3/profilefilterlinks/update
		/// </summary>
		/// <param name="service">Valid authentcated AnalyticsService</param>
		/// <param name="body">Valid ProfileFilterLink Body</param>
		/// <param name="accountId">Account ID to which profile filter link belongs.</param>
		/// <param name="webPropertyId">Web property Id to which profile filter link belongs</param>
		/// <param name="profileId">Profile ID to which filter link belongs</param>
		/// <param name="linkId">ID of the profile filter link to be updated.</param>
		/// <returns>ProfileFilterLink </returns>
	    public static ProfileFilterLink Update(AnalyticsService service, ProfileFilterLink body, string accountId, string webPropertyId, string profileId, string linkId)
	    {
		    //Note Genrate Argument Exception (https://msdn.microsoft.com/en-us/library/system.argumentexception(loband).aspx)
		    try
            {  
			return 			service.Management.ProfileFilterLinks.Update(body, accountId, webPropertyId, profileId, linkId).Execute();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Request Failed " + ex.Message);
                throw ex;
            }
		 }
		
    }
}
